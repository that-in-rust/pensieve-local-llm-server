#!/bin/bash
# Pensieve Setup - Dead Simple Installation
# Run once, forget about it

set -e

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
BOLD='\033[1m'
NC='\033[0m'

clear

echo ""
echo -e "${CYAN}${BOLD}"
echo "╔═══════════════════════════════════════════════════════════╗"
echo "║                                                           ║"
echo "║          🧠 PENSIEVE + CLAUDE CODE SETUP                  ║"
echo "║          Dead Simple - Just Answer Questions             ║"
echo "║                                                           ║"
echo "╚═══════════════════════════════════════════════════════════╝"
echo -e "${NC}"
echo ""

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_DIR="$(dirname "$SCRIPT_DIR")"
CLAUDE_DIR="$HOME/.claude"

# ============================================================================
# STEP 1: Check if Claude Code is authenticated
# ============================================================================

echo -e "${BLUE}Checking Claude Code authentication...${NC}"
echo ""

if [ ! -d "$CLAUDE_DIR" ] || [ ! -f "$CLAUDE_DIR/settings.json" ]; then
    echo -e "${YELLOW}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    echo -e "${YELLOW}${BOLD}  ⚠️  Claude Code Not Logged In${NC}"
    echo -e "${YELLOW}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    echo ""
    echo -e "${CYAN}You need to login to Claude Code first.${NC}"
    echo ""
    echo -e "${BOLD}Quick 2-Step Process:${NC}"
    echo ""
    echo -e "  ${GREEN}1.${NC} Open a terminal and run:"
    echo -e "     ${CYAN}claude${NC}"
    echo ""
    echo -e "  ${GREEN}2.${NC} Select login method → Complete authentication → Type ${CYAN}exit${NC}"
    echo ""
    echo -e "  ${GREEN}3.${NC} Run this setup again:"
    echo -e "     ${CYAN}./scripts/setup-pensieve${NC}"
    echo ""
    echo -e "${YELLOW}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
    echo ""
    exit 0
fi

echo -e "${GREEN}✓ Claude Code is authenticated${NC}"
echo ""

# ============================================================================
# STEP 2: Detect install location
# ============================================================================

echo -e "${BLUE}Detecting best installation location...${NC}"
echo ""

if [ -w "/opt/homebrew/bin" ] 2>/dev/null; then
    INSTALL_DIR="/opt/homebrew/bin"
elif [ -w "/usr/local/bin" ] 2>/dev/null; then
    INSTALL_DIR="/usr/local/bin"
elif [ -w "$HOME/.local/bin" ] 2>/dev/null; then
    INSTALL_DIR="$HOME/.local/bin"
else
    INSTALL_DIR="$HOME/.local/bin"
    mkdir -p "$INSTALL_DIR"
fi

echo -e "${GREEN}✓ Will install to: ${CYAN}$INSTALL_DIR${NC}"

if [[ ":$PATH:" != *":$INSTALL_DIR:"* ]]; then
    echo -e "${YELLOW}  ⚠️  Not in PATH yet - add this to ~/.zshrc:${NC}"
    echo -e "     ${CYAN}export PATH=\"$INSTALL_DIR:\$PATH\"${NC}"
fi
echo ""

# ============================================================================
# STEP 3: Create backup of current settings
# ============================================================================

echo -e "${BLUE}Creating backup of current settings...${NC}"
echo ""

TIMESTAMP=$(date +%Y%m%d-%H%M%S)
BACKUP_FILE="$CLAUDE_DIR/settings.json.backup-$TIMESTAMP"
cp "$CLAUDE_DIR/settings.json" "$BACKUP_FILE"

echo -e "${GREEN}✓ Backed up to: ${CYAN}$(basename $BACKUP_FILE)${NC}"
echo ""

# Save as cloud backup if not already local config
if ! grep -q "127.0.0.1:7777" "$CLAUDE_DIR/settings.json" 2>/dev/null; then
    cp "$CLAUDE_DIR/settings.json" "$CLAUDE_DIR/settings.json.cloud"
    echo -e "${GREEN}✓ Saved cloud config for easy switching${NC}"
    echo ""
fi

# ============================================================================
# STEP 4: Install scripts
# ============================================================================

echo -e "${BLUE}Installing command-line tools...${NC}"
echo ""

# Install pensieve-server
ln -sf "$SCRIPT_DIR/pensieve-server" "$INSTALL_DIR/pensieve-server"
echo -e "${GREEN}✓ Installed: ${CYAN}pensieve-server${NC} - Server management"

# Install claude-local wrapper
ln -sf "$SCRIPT_DIR/claude-local-v3" "$INSTALL_DIR/claude-local"
echo -e "${GREEN}✓ Installed: ${CYAN}claude-local${NC} - Launch with local server"

# Install claude-cloud wrapper
ln -sf "$SCRIPT_DIR/claude-cloud-v3" "$INSTALL_DIR/claude-cloud"
echo -e "${GREEN}✓ Installed: ${CYAN}claude-cloud${NC} - Launch with cloud API"

echo ""

# ============================================================================
# STEP 5: Success message
# ============================================================================

echo -e "${GREEN}${BOLD}"
echo "╔═══════════════════════════════════════════════════════════╗"
echo "║                                                           ║"
echo "║  ✅  SETUP COMPLETE!                                      ║"
echo "║                                                           ║"
echo "╚═══════════════════════════════════════════════════════════╝"
echo -e "${NC}"
echo ""

echo -e "${CYAN}${BOLD}🚀 You can now use:${NC}"
echo ""
echo -e "  ${GREEN}claude-local${NC}   →  Chat with local Pensieve server"
echo -e "                  (private, free, runs on your Mac)"
echo ""
echo -e "  ${GREEN}claude-cloud${NC}   →  Chat with Anthropic cloud API"
echo -e "                  (latest models, full capabilities)"
echo ""

echo -e "${CYAN}${BOLD}🔧 Server commands:${NC}"
echo ""
echo -e "  ${GREEN}pensieve-server start${NC}    - Start local server"
echo -e "  ${GREEN}pensieve-server stop${NC}     - Stop local server"
echo -e "  ${GREEN}pensieve-server status${NC}   - Check if running"
echo -e "  ${GREEN}pensieve-server logs${NC}     - View server logs"
echo ""

echo -e "${CYAN}${BOLD}💡 How it works:${NC}"
echo ""
echo -e "  • ${CYAN}claude-local${NC} automatically starts the server if needed"
echo -e "  • Both commands remember your choice for next time"
echo -e "  • Switch between them anytime - no restart needed"
echo -e "  • Your original settings are safely backed up"
echo ""

echo -e "${YELLOW}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
echo ""

read -p "🚀 Try 'claude-local' now? (y/n) " -n 1 -r
echo
echo ""

if [[ $REPLY =~ ^[Yy]$ ]]; then
    exec "$INSTALL_DIR/claude-local"
else
    echo -e "${BLUE}👍 Run ${CYAN}claude-local${BLUE} whenever you're ready!${NC}"
    echo ""
fi
